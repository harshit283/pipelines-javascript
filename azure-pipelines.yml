
stages:
- stage: Build_Source_Code # Build Source Code for Dotnet Core Web App
  jobs:
  - job: Build
    pool:
     vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'


    - task: CopyFiles@1
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)' 
        targetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: drop
        

- stage: Deploy_In_QA 
  jobs:
  - deployment: azure_web_app_qa
    variables:
      WebAppName: 'haaggarw-test-qa'
    environment: 'qa-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRMWebAppDeployment@4
            displayName: Azure App Service Deploy
            inputs:
              WebAppKind: webApp
              ConnectedServiceName: 'haaggarw-new-test-connection'
              WebAppName: $(WebAppName)
              Package: $(Pipeline.workspace)/drop

- stage: Deploy_In_Prod 
  dependsOn: DeDeploy_In_QA
  jobs:
  - deployment: azure_web_app_prod
    variables:
      WebAppName: 'haaggarw-test'
    environment: 'prod-environment'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRMWebAppDeployment@4
            displayName: Azure App Service Deploy
            inputs:
              WebAppKind: webApp
              WebAppName: $(WebAppName)
              ConnectedServiceName: 'haaggarw-new-test-connection'
              packageForLinux: '$(Pipeline.workspace)/drop'

              